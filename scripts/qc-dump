#!/bin/bash

dir="$1"
if [ -z "$dir" ]; then
	echo "Usage: $0 directory"
	exit 0
fi

if [ ! -d "$dir" ]; then
	echo "Directory does not exist!"
	exit 1
fi

errors=""
function flag {
	msg="$@"
	errors=`cat <<ERR
$errors$msg
ERR
`
}

function assert_file {
	f="$1"
	if [ ! -e "$f" ]; then
		flag "Required file $f is missing!"
	fi	
}

cd $dir
assert_file proteins.fa
assert_file contigs.fa
assert_file metadata.tbl
assert_file features.tab
assert_file functions.tab
if [ -n "$errors" ]; then
	echo "$errors"
	exit 0
fi

proteins=.proteins.$$
contigs=.contigs.$$
featctgs=.featctgs.$$
grep '^>' proteins.fa | cut -c2- | sort > $proteins
if [ -n "$(grep " " $proteins)" ]; then
	flag "[proteins.fa] Spaces found in IDs"
fi
grep '^>' contigs.fa | cut -c2- | sort > $contigs
if [ -n "$(grep " " $contigs)" ]; then
	flag "[contigs.fa] Spaces found in IDs"
fi
(cut -f3 | tr ',' '\n' | sed 's/_[^_]*$//' | sort -u) < features.tab > $featctgs
missctgs=$(join -v1 $featctgs $contigs)
if [ -n "$missctgs" ]; then
		cat <<EOF > missing-feature-contigs.txt
$missctgs
EOF
		flag "[features.tab] Referenced contigs missing from contigs.fa (missing-feature-contigs.txt)"
fi
rm $proteins
rm $contigs
rm $featctgs

if [ -n "$errors" ]; then
	echo "$errors"
	exit 0
fi
